{"version":3,"file":"main.js","mappings":"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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/Component/add-note/add-note.component.ts","./src/app/Component/add-note/add-note.component.html","./src/app/Component/dashboard/dashboard.component.ts","./src/app/Component/dashboard/dashboard.component.html","./src/app/Component/forgot-password/forgot-password.component.ts","./src/app/Component/forgot-password/forgot-password.component.html","./src/app/Component/icon/icon.component.ts","./src/app/Component/icon/icon.component.html","./src/app/Component/login/login.component.ts","./src/app/Component/login/login.component.html","./src/app/Component/register/register.component.ts","./src/app/Component/register/register.component.html","./src/app/Component/reset-password/reset-password.component.ts","./src/app/Component/reset-password/reset-password.component.html","./src/app/Service/HttpService/http-service.service.ts","./src/app/Service/UserService/user-service.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-add-note',\n  templateUrl: './add-note.component.html',\n  styleUrls: ['./add-note.component.scss']\n})\nexport class AddNoteComponent implements OnInit {\n  showVar: boolean = true;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card class=\"card\">\n    <div class=\"titlerow\">\n        <mat-card-title class=\"title\">\n            <textarea cdkTextareaAutosize  placeholder=\"Title\"></textarea>\n        </mat-card-title>\n        <mat-card-subtitle class=\"icons\">\n            <mat-icon  class= \"material-icons-outlined\">beenhere</mat-icon>\n        </mat-card-subtitle>\n    </div>\n    <div class=\"description\" style=\"padding-top:10px ;\">\n        <mat-card-title class=\"description\">\n            <textarea cdkTextareaAutosize placeholder=\"Take a note...\"></textarea>\n        </mat-card-title>\n    </div>\n    <div class=\"cardbottom\" style=\"padding-top:15px ;\">\n        <div class=\"icon\">\n            <mat-icon class= \"material-icons-outlined\">add_alert</mat-icon>\n            <mat-icon class= \"material-icons-outlined\">person_add</mat-icon>\n            <mat-icon class= \"material-icons-outlined\">crop_original</mat-icon>  \n            <mat-icon class= \"material-icons-outlined\">image</mat-icon>\n            <mat-icon class= \"material-icons-outlined\">archive</mat-icon>\n            <mat-icon class= \"material-icons-outlined\">more_vert</mat-icon> \n            <mat-icon class= \"material-icons-outlined\">undo</mat-icon> \n            <mat-icon class= \"material-icons-outlined\">redo</mat-icon>  \n        </div> \n        <div class=\"button\">\n            <button  mat-button style=\"color: #1A73E8;\">Cancel</button>\n        </div>\n    </div>\n</mat-card>\n\n  <!-- <mat-expansion-panel hideToggle >\n      <mat-expansion-panel-header>\n        <mat-panel-title class=\"title\">{{hide ? 'Take a note...' : 'Title'}}</mat-panel-title>\n        <mat-panel-description >\n            <div class=\"icons\" [style.display]=\"hide? 'flex':'none' \">\n            <mat-icon mat-list-icon class= \"material-icons-outlined\">check_box</mat-icon>\n            <mat-icon mat-list-icon class= \"material-icons-outlined\">brush</mat-icon>\n            <mat-icon mat-list-icon class= \"material-icons-outlined\">crop_original</mat-icon>  \n            </div> \n            <div class=\"pin\" [style.display]=\"!hide? 'flex':'none' \" style=\"justify-content: right;\">\n                <mat-icon mat-list-icon class= \"material-icons-outlined\">beenhere</mat-icon>\n            </div>  \n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <p >Take a note...</p>\n    </mat-expansion-panel> -->\n    <mat-card >\n        <mat-card-title class=\"title\">\n            Take a Note...\n        </mat-card-title>\n        <mat-card-subtitle class=\"icons\">\n            <mat-icon mat-list-icon class= \"material-icons-outlined\">check_box</mat-icon>\n            <mat-icon mat-list-icon class= \"material-icons-outlined\">brush</mat-icon>\n            <mat-icon mat-list-icon class= \"material-icons-outlined\">crop_original</mat-icon>  \n        </mat-card-subtitle>\n    </mat-card>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  opened: boolean=true;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar style=\"background-color: white;border-bottom: 1px solid #DADCE0;\">\n    <div class=\"menu\">\n        <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\n        <mat-icon class=\"menuicon\" (click)=\"sidenav.toggle()\">menu</mat-icon>\n        </button>\n        <img src=\"../../../assets/fundooIcon.png\" class=\"image\">\n    <mat-card-title style=\"margin-left: 5px; padding-top:14px;\">\n        <span style=\"color: #5F6368;font-weight:normal;;\">Fundoo</span>\n    </mat-card-title>\n    </div>\n    <div class=\"search\">\n        <mat-form-field class=\"search\" appearance=\"fill\" [style.width.px]=700>\n            <input matInput placeholder=\"Search\">\n            <mat-icon matPrefix style=\"margin: 0 10px;\">search</mat-icon>\n            </mat-form-field>\n    </div>\n    <div class=\"endIcons\">\n        <button mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\n            <mat-icon  class=\"material-icons-outlined\">view_agenda</mat-icon>\n        </button>\n        <button mat-button [matMenuTriggerFor]=\"menu\">\n            <mat-icon>supervised_user_circle</mat-icon>\n        </button>\n        <mat-menu #menu=\"matMenu\">\n            <img src=\"../../../assets/denis-harschi-umj2W38UOmc-unsplash.jpg\"  class=\"profilePic\">\n            <button mat-menu-item>Item 1</button>\n            <button mat-menu-item>Item 2</button>\n        </mat-menu>\n    </div>\n </mat-toolbar>\n <mat-sidenav-container class=\"main\">\n    <mat-sidenav #sidenav mode=\"side\" [(opened)]=\"opened\" class=\"side_nav\" >\n        <mat-nav-list>\n            <mat-list-item>\n              <mat-icon mat-list-icon class=\"sidenavLogo\">lightbulb_outline</mat-icon>\n              <h4 mat-line>Notes</h4>\n            </mat-list-item>\n            <mat-list-item>\n                <mat-icon mat-list-icon class=\"sidenavLogo\">notifications_none</mat-icon>\n                <h4 mat-line>Reminders</h4>\n              </mat-list-item>\n              <mat-list-item>\n                <mat-icon mat-list-icon class=\"sidenavLogo material-icons-outlined\">edit_outline</mat-icon>\n                <h4 mat-line>Edit labels</h4>\n              </mat-list-item>\n              <mat-list-item>\n                <mat-icon mat-list-icon class=\"sidenavLogo material-icons-outlined\">archive</mat-icon>\n                <h4 mat-line>Archive</h4>\n              </mat-list-item>\n              <mat-list-item>\n                <mat-icon mat-list-icon class=\"sidenavLogo material-icons-outlined\">delete</mat-icon>\n                <h4 mat-line>Trash</h4>\n              </mat-list-item>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content>\n            <app-add-note></app-add-note>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { UserServiceService } from 'src/app/Service/UserService/user-service.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  ForgotPasswordForm !: FormGroup;\n  constructor( private userService:UserServiceService,\n    private snackBar:MatSnackBar ,private router:Router) {}\n\n  ngOnInit(): void {\n    this.ForgotPasswordForm = new FormGroup({\n      email: new FormControl('',[Validators.required,])\n    });\n}\nonSubmit() {\n  if (this.ForgotPasswordForm.valid) {\n    this.forgotPassword();\n  }\n}\n  forgotPassword()\n  {\n    this.userService.ResetMail(this.ForgotPasswordForm.value.email).\n        subscribe((status:any)=>\n        {\n          this.snackBar.open(`${status.message}`, '', {duration: 3000 ,verticalPosition: 'bottom', horizontalPosition: 'left' })\n          if(`${status.status == true}`)\n          {\n          localStorage.setItem(\"Token\",`${status.data}`);\n          localStorage.setItem(\"Username\",`${this.ForgotPasswordForm.value.email}`);\n          }\n  },\n        error => {\n          this.snackBar.open(`${error.error.message}`, '', {duration: 3000 ,verticalPosition: 'bottom', horizontalPosition: 'left' })\n      });\n  }\n\n}\n","<div class=\"container\">\n    <mat-card class=\"card\">\n        <div class=\"ForgotContainer\">\n            <mat-card-title>\n                <span style=\"color: #4285F4;\">F</span>\n                <span style=\"color: #EA4335;\">u</span>\n                <span style=\"color: #FBBC05;\">n</span>\n                <span style=\"color: #4285F4;\">d</span>\n                <span style=\"color: #34A853;\">o</span>\n                <span style=\"color: #EB4E41;\">o</span>\n            </mat-card-title>\n                <h1> Account Recovery </h1>\n                <h3>Recover Your Fundoo Account</h3>\n            <form class=\"formContainer\" [formGroup]=\"ForgotPasswordForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"email\">\n                    <mat-form-field appearance=\"outline\">\n                        <mat-label>UserName</mat-label>\n                        <input type=\"email\" matInput id=\"email\" formControlName=\"email\">\n                    </mat-form-field>\n                </div>\n                <div class=\"buttonContainer\">\n                    <button [routerLink]=\"['/register']\" mat-button style=\"color: #1A73E8;\">Cancel</button>\n                  <button type=\"submit\" mat-raised-button class=\"button\">Next</button>\n                </div>\n            </form>\n        </div>\n    </mat-card>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-icon',\n  templateUrl: './icon.component.html',\n  styleUrls: ['./icon.component.scss']\n})\nexport class IconComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>icon works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { UserServiceService } from 'src/app/Service/UserService/user-service.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  LoginForm !: FormGroup;\n  hide = true;\n  constructor( private userService:UserServiceService,\n    private snackBar:MatSnackBar ,private router:Router) {}\n\n  ngOnInit(): void {\n    this.LoginForm = new FormGroup({\n      email: new FormControl('',[Validators.required,]),\n      password:new FormControl('',[Validators.required])\n    });\n}\nonSubmit() {\n  if (this.LoginForm.valid) {\n    this.login();\n  }\n}\n  login(){\n    this.userService.Login(this.LoginForm.value).\n        subscribe((status:any)=>\n        {\n          console.log(status);\n          this.snackBar.open(`${status.message}`, '', {duration: 3000 ,verticalPosition: 'bottom', horizontalPosition: 'left' })\n          if(`${status.status == true}`)\n          this.router.navigate(['/register']);\n      },\n        error => {\n          this.snackBar.open(`${error.error.message}`, '', {duration: 3000 ,verticalPosition: 'bottom', horizontalPosition: 'left' })\n      });\n  }\n}\n","<div class=\"container\">\n    <mat-card class=\"card\">\n        <div class=\"loginContainer\">\n            <mat-card-title>\n                <span style=\"color: #4285F4;\">F</span>\n                <span style=\"color: #EA4335;\">u</span>\n                <span style=\"color: #FBBC05;\">n</span>\n                <span style=\"color: #4285F4;\">d</span>\n                <span style=\"color: #34A853;\">o</span>\n                <span style=\"color: #EB4E41;\">o</span>\n            </mat-card-title>\n                <h1> Sign in</h1>\n                <h3>Use Your Fundoo Account</h3>\n            <form class=\"formContainer\" [formGroup]=\"LoginForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"email\">\n                    <mat-form-field appearance=\"outline\">\n                        <mat-label>UserName</mat-label>\n                        <input type=\"email\" matInput id=\"email\" formControlName=\"email\" >\n                    </mat-form-field>\n                </div>\n                <div class=\"password\">\n                    <mat-form-field appearance=\"outline\">\n                        <mat-label>Password</mat-label>\n                        <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" >\n                       <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n                        <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon></button>\n                    </mat-form-field>\n                    <button [routerLink]=\"['/forgetPassword']\" mat-flat-button class=\"forgotPassword\"style=\"color: #1A73E8;\">Forgot Password?</button>\n                </div>\n                <div class=\"buttonContainer\">\n                  <button [routerLink]=\"['/register']\" mat-button style=\"color: #1A73E8;\">Create account</button>\n                  <button type=\"submit\" mat-raised-button class=\"button\">Login</button>\n                </div>\n            </form>\n        </div>\n    </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { UserServiceService } from 'src/app/Service/UserService/user-service.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  RegisterForm !: FormGroup;\n\n  // variable - default false\n  hide: boolean = true;\n\n  isVisible:boolean= true;\n\n  constructor(\n    private userService:UserServiceService,\n     private snackBar:MatSnackBar ,private router:Router\n     ) {}\n\n    ngOnInit(): void {\n      this.RegisterForm = new FormGroup({\n        firstName: new FormControl('',[Validators.required,Validators.pattern('^[A-Z]{1}[a-zA-Z]{2,}'),Validators.minLength(3)]),\n        lastName: new FormControl('',[Validators.required,Validators.pattern('^[A-Z]{1}[a-zA-Z]{2,}'),Validators.minLength(3)]),\n        email: new FormControl('',[Validators.required, Validators.email]),\n        password:new FormControl('',[Validators.required, Validators.pattern('^.*(?=.{8,})(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!*@#$%^&+=]).*$'),Validators.minLength(8)]),\n        confirmPassword:new FormControl('',[Validators.required])\n      });\n    }\n    \n    onSubmit() {\n      if (this.RegisterForm.valid) {\n        this.Register();\n      }\n    }\n    ShowPassword()\n    {\n       this.hide = !this.hide;\n    }\n\n    getErrorMessage(inputName:string)\n    {\n      let len = inputName==\"password\"? 8:3;\n        if (this.RegisterForm.controls[`${inputName}`].hasError('required')) {\n          return 'You must enter a value';\n        }\n        else if(this.RegisterForm.controls[`${inputName}`].hasError('minlength')){\n          return `minimum ${len} characters`;\n        }\n              else if(this.RegisterForm.controls[`${inputName}`].hasError('email'))\n        {\n          return `${inputName} is invalid`;\n        }\n        return this.RegisterForm.controls[`${inputName}`].hasError('pattern') ? `${inputName} is invalid` : '';\n    }\n\n    Register(){\n        this.userService.Register(this.RegisterForm.value).\n        subscribe((status:any)=>\n        {\n          this.snackBar.open(`${status.message}`, '', {duration: 3000 ,verticalPosition: 'bottom', \n          horizontalPosition: 'left' })\n          if(`${status.status == true}`)\n            this.router.navigate(['/login']);\n        },\n        error => {\n          this.snackBar.open(`${error.error.message}`, '', {duration: 3000 ,verticalPosition: 'bottom', \n          horizontalPosition: 'left' })\n      });\n    }\n}","<div class=\"container\">\n    <mat-card class=\"card\">\n        <div class=\"registerContainer\">\n            <mat-card-title>\n                <span style=\"color: #4285F4;\">F</span>\n                <span style=\"color: #EA4335;\">u</span>\n                <span style=\"color: #FBBC05;\">n</span>\n                <span style=\"color: #4285F4;\">d</span>\n                <span style=\"color: #34A853;\">o</span>\n                <span style=\"color: #EB4E41;\">o</span>\n            </mat-card-title>\n            <mat-card-subtitle>\n                <h1> Create Your Fundoo Account</h1>\n            </mat-card-subtitle>\n            <form class=\"formContainer\" [formGroup]=\"RegisterForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"name\">\n                    <mat-form-field appearance=\"outline\" >\n                        <mat-label>FirstName</mat-label>\n                        <input matInput id=\"FirstName\" formControlName=\"firstName\" >\n                        <mat-error *ngIf=\"RegisterForm.controls['firstName'].invalid\">{{getErrorMessage(\"firstName\")}}</mat-error>\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"outline\" class=\"lastname\" >\n                        <mat-label>Lastname</mat-label>\n                        <input matInput id=\"lastname\" formControlName=\"lastName\" >\n                        <mat-error *ngIf=\"RegisterForm.controls['firstName'].invalid\">{{getErrorMessage(\"lastName\")}}</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"username\">\n                    <mat-form-field appearance=\"outline\" class=\"email\" >\n                        <mat-label>UserName</mat-label>\n                        <input matInput id='username' formControlName=\"email\" >\n                        <mat-hint>You can use letter, numbers and Periods</mat-hint>\n                        <mat-error *ngIf=\"RegisterForm.controls['email'].invalid\">{{getErrorMessage(\"email\")}}</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"password\">\n                    <mat-form-field appearance=\"outline\" (click)=\"isVisible=false\" >\n                        <mat-label>Password</mat-label>\n                        <input [type]=\"hide ? 'password' : 'text'\" matInput id=\"password\" formControlName=\"password\"  >\n                        <mat-error *ngIf=\"RegisterForm.controls['password'].invalid\">{{getErrorMessage(\"password\")}}</mat-error>\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"outline\" class=\"confirm\" (click)=\"isVisible=false\" >\n                        <mat-label>Confirm</mat-label>\n                        <input [type]=\"hide ? 'password' : 'text'\" matInput id=\"confirmPassword\"  formControlName=\"confirmPassword\" pattern=\"{{ this.RegisterForm.value.password}}\" >\n                        <mat-error *ngIf=\"RegisterForm.controls['confirmPassword'].invalid\" >Password doesn't match</mat-error>\n                    </mat-form-field>\n                    <mat-hint style=\"margin-top: -10px; \" [style.display]=\"isVisible? 'block':'none' \">Use 8 or more characters with a mix of letters, numbers & symbols</mat-hint>\n                </div>\n                <div>\n                    <mat-checkbox id=\"showPassword\" (click)=\"ShowPassword()\">{{hide ? 'Show Password':'Hide Password'}}</mat-checkbox>\n                </div>\n                <div class=\"buttonContainer\">\n                  <button [routerLink]=\"['/login']\" mat-button style=\"color: #1A73E8;\">Sign in instead</button>\n                  <button type=\"submit\" mat-raised-button class=\"button\">Register</button>\n                </div>\n            </form>\n        </div>\n        <div class=\"imageContainer\">\n            <img src=\"../../../assets/RegisterImage.svg\">\n            <p>One account. All of Google working for you</p>\n        </div>\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { UserServiceService } from 'src/app/Service/UserService/user-service.service';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n  hide = true;\n  ResetPasswordForm!:FormGroup\n\n\n  constructor(private userService:UserServiceService,\n    private snackBar:MatSnackBar ,private router:Router) { }\n\n    ngOnInit(): void\n    {\n      this.ResetPasswordForm = new FormGroup({\n        password:new FormControl('',[Validators.required, Validators.pattern('^.*(?=.{8,})(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!*@#$%^&+=]).*$'),Validators.minLength(8)]),\n        confirmPassword:new FormControl('',[Validators.required])\n        });\n    }\n    onSubmit() {\n      if (this.ResetPasswordForm.valid) {\n        this.forgotPassword();\n      }\n    }\n    getErrorMessage(inputName:string)\n    {\n        if (this.ResetPasswordForm.controls[`${inputName}`].hasError('required')) {\n          return 'You must enter a value';\n        }\n        else if(this.ResetPasswordForm.controls[`${inputName}`].hasError('minlength')){\n          return `minimum 8 characters required`;\n        }\n        return this.ResetPasswordForm.controls[`${inputName}`].hasError('pattern') ? `${inputName} is invalid` : '';\n    }\n\n    ShowPassword()\n    {\n       this.hide = !this.hide;\n    }\n    forgotPassword(){\n      this.userService.ResetPassword(this.ResetPasswordForm.value).\n          subscribe((status:any)=>\n          {\n            console.log(status);\n            this.snackBar.open(`${status.message}`, '', {duration: 3000 ,verticalPosition: 'bottom', horizontalPosition: 'left' })\n            if(`${status.status == true}`)\n            this.router.navigate(['/login']);\n        },\n          error => {\n            this.snackBar.open(`${error.error.message}`, '', {duration: 3000 ,verticalPosition: 'bottom', horizontalPosition: 'left' })\n        });\n    }\n}\n\n\n","<div class=\"container\">\n    <mat-card class=\"card\">\n        <div class=\"loginContainer\">\n            <mat-card-title>\n                <span style=\"color: #4285F4;\">F</span>\n                <span style=\"color: #EA4335;\">u</span>\n                <span style=\"color: #FBBC05;\">n</span>\n                <span style=\"color: #4285F4;\">d</span>\n                <span style=\"color: #34A853;\">o</span>\n                <span style=\"color: #EB4E41;\">o</span>\n            </mat-card-title>\n                <h1>Change Password</h1>\n            <form class=\"formContainer\" [formGroup]=\"ResetPasswordForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"password\">\n                    <mat-form-field appearance=\"outline\" >\n                        <mat-label>Password</mat-label>\n                        <input [type]=\"hide ? 'password' : 'text'\" matInput id=\"password\" formControlName=\"password\">\n                        <mat-error *ngIf=\"ResetPasswordForm.controls['password'].invalid\">{{getErrorMessage(\"password\")}}</mat-error>\n                        <mat-hint>Use 8 or more characters with a mix of letters, numbers & symbols</mat-hint>\n                    </mat-form-field>\n                </div>\n                <div class=\"password confirmPassword\">\n                    <mat-form-field appearance=\"outline\" class=\"confirm\">\n                        <mat-label>Confirm</mat-label>\n                        <input [type]=\"hide ? 'password' : 'text'\" matInput id=\"confirmPassword\"  formControlName=\"confirmPassword\" pattern=\"{{ this.ResetPasswordForm.value.password}}\" >\n                        <mat-error *ngIf=\"ResetPasswordForm.controls['confirmPassword'].invalid\" >Password doesn't match</mat-error>\n                    </mat-form-field>  \n                </div>\n                <div>\n                    <mat-checkbox id=\"showPassword\" (click)=\"ShowPassword()\">{{hide ? 'Show Password':'Hide Password'}}</mat-checkbox>\n                </div>\n                <div class=\"buttonContainer\">\n                  <button [routerLink]=\"['/login']\" mat-button style=\"color: #1A73E8;\">Cancel</button>\n                  <button type=\"submit\" mat-raised-button class=\"button\">Reset</button>\n                </div>\n            </form>\n        </div>\n    </mat-card>\n</div>\n\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpServiceService {\n\n  constructor(private http:HttpClient) { }\n\n  post(url:string ,data:any=null,isHeaderRequired:any=false,headers:any=null)\n  {\n    console.log(url,data+\"value\");\n    return this.http.post(url,data,isHeaderRequired && headers)\n  }\n  \n  put(url:string ,data:any=null,isHeaderRequired:any=false,headers =null)\n  {\n    console.log(url,data+\"value\");\n    return this.http.put(url,data,isHeaderRequired && headers)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpServiceService } from '../HttpService/http-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserServiceService {\n\n  constructor(private httpService:HttpServiceService ) {\n    \n   }\n\n  Register(data:any){\n      const params={\n        FirstName : data.firstName,\n        LastName : data.lastName,\n        Email :data.email,\n        Password : data.password,\n      }\n      return this.httpService.post(`${environment.baseUrl}/api/register`,params)\n    }\n\n    Login(data:any){\n      const params={\n        Email :data.email,\n        Password : data.password,\n      }\n      return this.httpService.post(`${environment.baseUrl}/api/login`,params)\n    }\n    \n    ResetMail(data:any)\n    {\n      return this.httpService.post(`${environment.baseUrl}/api/forgotpassword?email=${data}`);\n    }\n\n    ResetPassword(data:any){\n      const params={\n        Email : localStorage.getItem(\"Username\"),\n        Password : data.password,\n      }\n      return this.httpService.put(`${environment.baseUrl}/api/resetpassword`,params)\n    }\n}\n","import { Component, NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent } from './Component/dashboard/dashboard.component';\nimport { ForgotPasswordComponent } from './Component/forgot-password/forgot-password.component';\nimport { LoginComponent } from './Component/login/login.component';\nimport { RegisterComponent } from './Component/register/register.component';\nimport { ResetPasswordComponent } from './Component/reset-password/reset-password.component';\n\nconst token =localStorage.getItem(\"Token\");\n\nconst routes: Routes = \n[\n  {path:'register', component:RegisterComponent},\n  {path:'login', component:LoginComponent},\n  {path:'forgetPassword',component:ForgotPasswordComponent},\n  {path:`resetpassword/${token}`,component:ResetPasswordComponent},\n  {path:'home',component:DashboardComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    initialNavigation: 'enabled'\n})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'FundooNotes';\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport { RegisterComponent } from './Component/register/register.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatButtonModule} from '@angular/material/button';\nimport { LoginComponent } from './Component/login/login.component';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport { ForgotPasswordComponent } from './Component/forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './Component/reset-password/reset-password.component';\nimport { DashboardComponent } from './Component/dashboard/dashboard.component';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatListModule} from '@angular/material/list';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport { AddNoteComponent } from './Component/add-note/add-note.component';\nimport {AutosizeModule} from 'ngx-autosize';\nimport {MatMenuModule} from '@angular/material/menu';\nimport { IconComponent } from './Component/icon/icon.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    LoginComponent,\n    ForgotPasswordComponent,\n    ResetPasswordComponent,\n    DashboardComponent,\n    AddNoteComponent,\n    IconComponent\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatSnackBarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatExpansionModule,\n    AutosizeModule,\n    MatMenuModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  baseUrl:'https://localhost:44310',\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  platformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n});\n"],"names":[],"sourceRoot":"webpack:///"}